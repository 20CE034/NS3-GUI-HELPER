#include "ns3/applications-module.h"
#include "ns3/core-module.h"
#include "ns3/internet-module.h"
#include "ns3/network-module.h"
#include "ns3/point-to-point-module.h"
#include "ns3/netanim-module.h"

using namespace ns3;

NS_LOG_COMPONENT_DEFINE("MeshExample");

int
main(int argc, char* argv[])
{
    CommandLine cmd(__FILE__);
    cmd.Parse(argc, argv);

    Time::SetResolution(Time::NS);
    LogComponentEnable("UdpEchoClientApplication", LOG_LEVEL_INFO);
    LogComponentEnable("UdpEchoServerApplication", LOG_LEVEL_INFO);
    
    // step-1 = creating group of nodes....
    NodeContainer allNodes,nodes01, nodes12, nodes23, nodes30;
    allNodes.Create(4);
    nodes01.Add(allNodes.Get(0));
    nodes01.Add(allNodes.Get(1));
    
    nodes12.Add(allNodes.Get(1));
    nodes12.Add(allNodes.Get(2));
    
    nodes23.Add(allNodes.Get(2));
    nodes23.Add(allNodes.Get(3));
    
    nodes30.Add(allNodes.Get(3));
    nodes30.Add(allNodes.Get(0));

    // step-2 = create link
    PointToPointHelper pointToPoint;
    pointToPoint.SetDeviceAttribute("DataRate", StringValue("500Mbps"));
    pointToPoint.SetChannelAttribute("Delay", StringValue("2ms"));
    
    // step-3 = creating devices
    NetDeviceContainer devices01, devices12, devices23, devices30, devices02, devices13;
    devices01 = pointToPoint.Install(nodes01);
    devices12 = pointToPoint.Install(nodes12);
    devices23 = pointToPoint.Install(nodes23);
    devices30 = pointToPoint.Install(nodes30);

    // step-4 = Install ip stack
    InternetStackHelper stack;
    stack.Install(allNodes);
    
    // step-5 = Assignment of IP Address
    Ipv4AddressHelper address;
    
    address.SetBase("54.0.0.0", "255.0.0.0");
    Ipv4InterfaceContainer interfaces01 = address.Assign(devices01);
    
    address.SetBase("55.0.0.0", "255.0.0.0");
    Ipv4InterfaceContainer interfaces12 = address.Assign(devices12);
    
    address.SetBase("56.0.0.0", "255.0.0.0");
    Ipv4InterfaceContainer interfaces23 = address.Assign(devices23);
    
    address.SetBase("57.0.0.0", "255.0.0.0");
    Ipv4InterfaceContainer interfaces30 = address.Assign(devices30);
   
    // step-6 = server configuration 
    UdpEchoServerHelper echoServer(9);

    ApplicationContainer serverApps = echoServer.Install(allNodes.Get(0));
    serverApps.Start(Seconds(1.0));
    serverApps.Stop(Seconds(10.0));
    
    // step-7 = client configuration
    UdpEchoClientHelper echoClient(interfaces01.GetAddress(0), 9);
    echoClient.SetAttribute("MaxPackets", UintegerValue(1));
    echoClient.SetAttribute("Interval", TimeValue(Seconds(1.0)));
    echoClient.SetAttribute("PacketSize", UintegerValue(1024));

    ApplicationContainer clientApps = echoClient.Install(allNodes.Get(3));
    clientApps.Start(Seconds(2.0));
    clientApps.Stop(Seconds(10.0));
    
    Ipv4GlobalRoutingHelper::PopulateRoutingTables();
    AnimationInterface anim("ring.xml");
    

    Simulator::Run();
    Simulator::Destroy();
    return 0;
}